services:
  backend:
    build:
      context: ../backend/foodgram
      dockerfile: Dockerfile
    container_name: foodgram_backend
    depends_on:
      - db
    volumes:
      - ../backend/foodgram:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=localhost,127.0.0.1,foodgram_backend,yc16sprint.ru
      - DB_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=foodgram
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=foodgram_pass
      - DB_HOST=db
      - DB_PORT=5432
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - foodgram_network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: foodgram_front
    volumes:
      - ../frontend/build:/usr/share/nginx/html
    networks:
      - foodgram_network

  db:
    image: postgres:14
    container_name: foodgram_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=foodgram
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=foodgram_pass
    networks:
      - foodgram_network

  nginx:
    image: nginx:1.19
    container_name: foodgram_proxy
    ports:
      - "80:80"
    volumes:
      - ../infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
      - frontend
    networks:
      - foodgram_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  foodgram_network:
    driver: bridge