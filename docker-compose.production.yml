version: '3.8'

services:
  db:
    image: postgres:14
    container_name: foodgram-db-1
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  backend:
    image: ${DOCKER_USERNAME}/foodgram_backend:latest
    container_name: foodgram-backend-1
    env_file:
      - .env
    volumes:
      - static:/app/static/
      - media:/app/media/
    depends_on:
      db:
        condition: service_healthy
    restart: always

  # Можно удалить совсем — nginx сам раздаёт фронт из образа.
  # frontend:
  #   image: ${DOCKER_USERNAME}/foodgram_frontend:latest
  #   container_name: foodgram-frontend-1
  #   ports:
  #     - "3000:3000"
  #   restart: always

  nginx:
    image: ${DOCKER_USERNAME}/foodgram_nginx:latest
    container_name: foodgram-nginx-1
    ports:
      - "80:80"
    depends_on:
      - backend
      # - frontend   # если удалишь frontend — убери и depends_on
    volumes:
      - static:/app/static/
      - media:/app/media/
    restart: always

volumes:
  pg_data:
  static:
  media:
